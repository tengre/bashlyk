#!/bin/bash
#
# $Id$
#
[ -s /etc/bashlyk/bashlyk.conf ] && . /etc/bashlyk/bashlyk.conf
#
# global variables
#
   _bashlyk_aLib=${_bashlyk_aLib:="log,cnf,pid,md5,opt,xml"}
_bashlyk_pathLib=${_bashlyk_pathLib:="/usr/share/bashlyk"}
   _bashlyk_sArg=$*
#
# function section
#
udfInit() {
 local pathCnf pathRoot pathRun pathLog sUser sHome s
 _bashlyk_sId=${_bashlyk:-bashlyk}
 [ -n "$_bashlyk" ] && s="/${_bashlyk}" || s=
 pathCnf="etc${s}"
 pathLog="var/log${s}"
 pathRun="var/run${s}"
 sUser=$(ps -p $$ -o user=)
 case $sUser in
  'root')
   pathRoot=''
  ;;
  '')
   pathRoot="/tmp/$$_$USER/.bashlyk"
  ;;
  *)
   if [ -z "$HOME" -o ! -O "$HOME" ]; then
    sHome=$(getent passwd ${sUser} | cut -d ":" -f 6)
    [ -n "$sHome" -a -d "$sHome" -a -O "$sHome" ] \
     && pathRoot="${sHome}/.bashlyk" \
     || pathRoot="/tmp/$$_$sUser/.bashlyk"
   else
    pathRoot="${HOME}/.bashlyk"
   fi
  ;;
 esac

 _bashlyk_pathRun="${pathRoot}/${pathRun}"
 _bashlyk_pathLog="${pathRoot}/${pathLog}"
 _bashlyk_pathCnf="${pathRoot}/${pathCnf}"

 [ -d "$_bashlyk_pathRun" ] || mkdir -p $_bashlyk_pathRun
 [ -d "$_bashlyk_pathLog" ] || mkdir -p $_bashlyk_pathLog
 [ -d "$_bashlyk_pathCnf" ] || mkdir -p $_bashlyk_pathCnf
 [ -t "1" ] && _bashlyk_bTerminal=1 || _bashlyk_bTerminal=0
}
#
udfMain() {
 udfInit
 local fn
 for fn in $(echo ${_bashlyk_aLib} | tr ',' ' '); do
  local fnLib="${_bashlyk_pathLib}/lib${fn}.sh"
  [ -s $fnLib ] && . $fnLib || eval 'echo "error with $fnLib using"; exit -1'
 done
 [ $_bashlyk_bTerminal -eq 0 ] && udfSetLog
 return 0
}
#
# main section
#
udfMain $*
