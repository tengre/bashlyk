#!/bin/bash
#
# $Id$
#
#****h* bashlyk
#  DESCRIPTION
#    bashlyk - сценарий подключения BASHLYK
#  AUTHOR
#    Damir Sh. Yakupov <yds@bk.ru>
#******
#****v*  bashlyk/Init section
#  DESCRIPTION
#    Блок инициализации глобальных переменных
#  SOURCE
[ -s /etc/bashlyk/bashlyk.conf ] && . /etc/bashlyk/bashlyk.conf
: ${_bashlyk_aLib:="log,cnf,pid,md5,opt,xml"}
: ${_bashlyk_pathLib:="/usr/share/bashlyk"}
: ${_bashlyk_sArg:=$*}
: ${_bashlyk_bInteractive:=1}
: ${_bashlyk_bTerminal:=1}
#******
#****f* bashlyk/udfInit
#  SYNOPSIS
#    udfInit
#  DESCRIPTION
#    Подготовка к запуску сценария, определение условий его работы
#    (каталоги расположения создаваемых файлов, наличие терминала и т.п.)
#    Если запуск выполняется от "root", то каталоги располагаются глобально, согласно LBS, 
#    иначе - в каталоге ~/.bashlyk или во временном каталоге, если не удалось определить
#    владельца процесса
#  SOURCE
udfInit() {
 local pathCnf pathRoot pathRun pathLog sUser sHome 
 _bashlyk_sId=${_bashlyk:-bashlyk}
 [ -n "$_bashlyk" ] && _bashlyk_pathPrefix="/${_bashlyk}" || _bashlyk_pathPrefix=
 pathCnf="etc${_bashlyk_pathPrefix}"
 pathLog="var/log${_bashlyk_pathPrefix}"
 pathRun="var/run${_bashlyk_pathPrefix}"
 sUser=$(ps -p $$ -o user=)
 case $sUser in
  'root')
   pathRoot=''
  ;;
  '')
   pathRoot="/tmp/$$_$USER/.bashlyk"
  ;;
  *)
   if [ -z "$HOME" -o ! -O "$HOME" ]; then
    sHome=$(getent passwd ${sUser} | cut -d ":" -f 6)
    [ -n "$sHome" -a -d "$sHome" -a -O "$sHome" ] \
     && pathRoot="${sHome}/.bashlyk" \
     || pathRoot="/tmp/$$_$sUser/.bashlyk"
   else
    pathRoot="${HOME}/.bashlyk"
   fi
  ;;
 esac

 _bashlyk_pathRun="${pathRoot}/${pathRun}"
 _bashlyk_pathLog="${pathRoot}/${pathLog}"
 _bashlyk_pathCnf="${pathRoot}/${pathCnf}"

 #[ -d "$_bashlyk_pathRun" ] || mkdir -p $_bashlyk_pathRun
 #[ -d "$_bashlyk_pathLog" ] || mkdir -p $_bashlyk_pathLog
 #[ -d "$_bashlyk_pathCnf" ] || mkdir -p $_bashlyk_pathCnf
 [ -t "1" ] && _bashlyk_bTerminal=1 || _bashlyk_bTerminal=0
}
#******
#****f* bashlyk/udfMain
#  SYNOPSIS
#    udfMain <args>
#  DESCRIPTION
#    Вызов udfInit, подключение модулей, установка режима ведения лога
#  SOURCE
udfMain() {
 udfInit
 local fn
 for fn in $(echo ${_bashlyk_aLib} | tr ',' ' '); do
  local fnLib="${_bashlyk_pathLib}/lib${fn}.sh"
  [ -s $fnLib ] && . $fnLib || eval 'echo "error with $fnLib using"; exit -1'
 done
 [ $_bashlyk_bTerminal -eq 0 ] && udfSetLog
 return 0
}
#******
#****** bashlyk/Main section
#  DESCRIPTION
#    Вызов udfMain - подключение системы BASHLYK к сценарию
#  SOURCE
udfMain $*
#******

