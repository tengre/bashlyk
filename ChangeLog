Fri, 18 Jul 2014 23:42:13 +0400
	New upstream release
	Version 1.79
 - Реализован заявленный в версии 1.73 "гибкий механизм уведомлений о выполнении
   рабочих сценариев" - предупреждения или сообщения об ошибках теперь могут
   передаваться не только по электронной почте, но и на рабочий стол локального
   пользователя если запущена соответствующая X-сессия.
 - Внесена защита от потенциального выполнения кода при разборе обычных
   "неактивных" секций ini-файлов. Последовательности символов вида "$(" и "`"
   считаются недопустимыми и заменяются инфографическими метками "-S-(" и "^_"
 - исправлены ошибки форматирования при создании или изменении конфигурационных
   ini-файлов
 - исправлена ошибка выделения пары ключ-значение из строки c символом '$' в
   сценарии ini2csv.awk

 Подробности:
 libstd.sh:
 - добавлены глобальные переменные:
   * _bashlyk_sLogin - признак активной сессии для утилиты write
   * _bashlyk_sXSessionProp - хранение свойств запущенной X-сессии, необходимых
     для отправки уведомлений его владельцу
 - в udfMail не требуется замена команды mail на write. Получателем сообщения
   последовательно, в случае доступности, выбирается:
   * владелец активной сессии пользователя ($_bashlyk_sLogin)
   * владелец процесса рабочего сценария   ($_bashlyk_sUser)
   * postmaster
 - добавлены новые функции:
   * udfGetXSessionProperties - получить необходимые для передачи уведомлений
     свойства X-сессии в глобальную переменную _bashlyk_sXSessionProp
   * udfNotifyCommand - обертка для формирования команды уведомления, которая,
     при необходимости, вызывает udfGetXSessionProperties для уточнения значений
     параметров целевой для уведомления X-сессии: DBUS_SESSION_BUS_ADDRESS,
     XAUTHORITY и DISPLAY. Только root, как владелец процесса, может передавать
     уведомления в сессии других пользователей.
   * udfNotify2X - передача сообщения службе уведомлений окружения рабочего
     стола или вывод на нём модального окна в случае обнаружения X-сессии на
     локальном компьютере. Функция последовательно пробует задействовать утилиты
     notify-send, kdialog, zenity или xmessage через обертку udfNotifyCommand.
   * udfMessage - универсальная точка отправки сообщения пользователю системы
     или владельцу процесса рабочего сценария, призвана расширить возможности
     доставки сообщений из рабочих сценариев c использованием данной библиотеки.
     Функция последовательно пробует задействовать возможности udfNotify2X,
     udfMail или write. Начиная c этой версии, заменяет вызов udfMail в udfWarn.
   * udfTimeStamp - используется для создания метки строки в файл журнала. Метка
     - "штамп времени" принудительно формируется в среде LANG=C LC_TIME=C, чем и
     отличается от udfDate
 - функция udfBaseId отмечена как устаревшая - то же, что и вызов "_ sId"
 - добавлены новые коды ошибок:
   _bashlyk_iErrorCommandNotFound
   _bashlyk_iErrorXsessionNotFound
   _bashlyk_iErrorUserXsessionNotFound
   _bashlyk_iErrorNotPermitted
 ini2csv.awk:
 - при разборе активных секций ini-файлов символ '"' преобразуется во внутреннее
   представление '_bashlyk_&#43_'. Обратное преобразование выполняется функцией
 libstd::udfBashlykUnquote
 libini.sh:
 - Сформированные функцией udfGetOpt данные об опциях командной строки
   ($_bashlyk_csvOptions2Ini) сбрасываются после вызова udfIniGroup2Csv, также
   как и флаг наличия таких данных (_bashlyk_bSetOptions)
 libini::udfIniWrite, ini2csv.awk:
 - удален признак CSV-представления активной секции ini-файла в виде первого
   поля со значением ":" как неиспользуемый, так как автоматическое выполнение
   активных секций в целях безопасности не предполагается.
 liblog.sh:
 - udfLogger использует вызов libstd::udfTimeStamp вместо libstd::udfDate, что
   позволяет убрать манипуляции c переменными среды LANG и LC_TIME, упрощен код
 libini.sh, libstd.sh:
 - скорректированы тестовые модули, оптимизирован код, учитывается визуализация
   тестирования функций отправки уведомлений
 debian/control:
 - в Секцию Depends добавлен пакет sudo
 - в Секцию Suggests добавлены пакеты libnotify-bin, kdialog, zenity, x11-utils,
   bsdmainutils
 - минимальная версия bash от 4.x (поддержка ассоциативных массивов)
 - скорректировано описание пакета

Mon, 09 Jun 2014 11:51:31 +0400
	New upstream release
	Version 1.78
 - По аналогии c libcnf в libini реализовано согласование опций командной строки
   с опциями используемых конфигурационных файлов, но c учетом применения в ini
   файлах секций данных. Комплексная функция udfIni теперь по требованию может
   создавать виртуальный образ ini-файла из опций командной строки при помощи
   специального метода - udfOptions2Ini. Этот образ ini-файла обрабатывается
   также как и штатные ini-файлы, но после них, тем самым позволяя
   переопределять настройки из конфигурационных файлов, дополнять их и т.п.
   Кроме того, отдельный вызов udfOptions2Ini, например, после разбора всех
   конфигураций, позволяет получить срез актуальных данных, полученных как из
   ini-файлов, так и и опций командной строки, что дает возможность сохранить
   эти актуальные конфигурационные данные в выбранный ini-файл вызовом функции
   udfIniWrite.
   Пример работы c источниками внешних настроек:

   # опции командной строки запоминаются в соответствующие переменные:
   udfGetOpt "<'длинные' опции>" <аргументы командной строки>

   # получить данные ini-файлов в переменные-опции согласно структуры, при этом
   # ранее выполненный вызов udfGetOpt разрешает учет опций командной строки
   # в окончательной установке значений этих переменных:
   udfIni <ini-файл> <структура секций>

   # если потребуется, можно сохранить ранее извлечённые из всех источников
   конфигурационные данные в отдельный ini-файл:
   < сохранить настройки > && {
    udfOptions2Ini <структура секций>
    udfIniWrite <ini-файл>
   }

   Секции с "безымянными" строками (не "ключ = значение" !) или "активными"
   сценариями должны быть отмечены в структуре секций модификаторами, задающими
   стратегию их обработки по мере накопления данных согласно приоритета из
   родственных конфигурационных файлов и опций командной строки:

   "-" "!" - принимаются данные только самого приоритетного источника
   "+"     - данные разных источников последовательно "склеиваются"
   "="     - после "склеивания" выполняется унификация - сортировка и удаление
           повторяющихся данных (строк)

   пример структуры секций:

           replace:- charge:+ sort:= exec:!

   где "replace", "charge", "sort", "exec" - имена переменных для сохранения
   данных из одноименных секций ([replace], [charge] и т.д.) или опций командной
   строки (--replace 'a,b,c' --charge 'd,e,f' и т.п. - данные для каждой опции
   разделяются запятыми).

   Особенность, которую надо учитывать в данной версии при обработке ini-файлов
   и опций командной строки:
   * Нельзя инициализировать значениями по умолчанию переменные-опции до вызова
    udfIni - может возникнуть ситуация, когда значения по умолчанию окажутся
    приоритетнее всех других, например, если часть опции указывалось в командной
    строке (вызов udfGetOpt), то для другой части опций будет приоритетом рано
    установленные значения по умолчанию!

 Подробности:
 libopt.sh:
 - добавлена глобальная переменная-флаг _bashlyk_bSetOptions, которая взводится
   после вызова udfGetOpt как сигнал о необходимости учета опций командной
   строки в udfIni
 libstd.sh:
 - добавлены новые константы и глобальные переменные:
   _bashlyk_iErrorEmptyOrMissingArgument
   _bashlyk_iErrorNonValidArgument
   _bashlyk_iErrorNonValidVariable
   _bashlyk_iErrorNotExistNotCreated
   _bashlyk_iLastError
   _bashlyk_sLastError
 - добавлены новые функции c описаниями и тестовыми модулями:
   * udfSetLastError - установить код ошибки ( _bashlyk_iError... ) и текст
     детализации. Используется для обработки ошибок в udfIni, udfIniWrite,
     udfOptions2Ini, udfSerialize
   * udfSerialize - получить сериализацию переменных в виде CSV; строки
   * udfBashlykUnquote - функция для преобразования входного потока с
     метапоследовательностями вида "_bashlyk_&#XX_" в поток с соответствующими
     им символам (обычно CSV;-строка)
 - udfPrepare2Exec - теперь использует udfBashlykUnquote и может читать входной
   поток (опция -)
 - исправлены ошибки в get/set функции "_"  - используются двойные кавычки для
   второго аргумента на случай если он содержит пробелы
 libini.sh:
 - добавлена глобальная переменная _bashlyk_bSetOptions
 - добавлена новая функция udfOptions2Ini - создание виртуального ini-файла из
   опций командной строки (хотя туда могут попасть значения по умолчанию!),
   создано описание и тестовый модуль
 - udfIni - если _bashlyk_bSetOptions установлена, то выполняется udfOptions2Ini
 - udfIniWrite:
   * если отсутствует второй аргумент, то выполняется попытка обращения к
     $_bashlyk_csvOptions2Ini - виртуальному образу ini-файла
   * улучшено форматирование создаваемого ini-файла, используется табуляция
   * добавлен в конвейер преобразований входного потока вызов udfBashlykUnquote,
     который защищает активные секции от искажений
   * если пути к создаваемому ini-файлу не существует, то выполняется попытка
     его создания (mkdir -p)
   * улучшен тестовый модуль
 - udfIniGroup2Csv:
   * формирование записей секций c разделителем "_bashlyk_csv_record=" для того,
   чтобы можно было применить стратегии обработки "безымянных" и "активных"
   секций согласно структуре секций в udfIni, пустая запись игнорируется
   * удалена обработка лишнего аргумента
   * глобальная переменная $_bashlyk_csvOptions2Ini сбрасывается после вызова
     этой функции
 - udfReadIniSection, udfIniGroup2Csv - скорректированы тестовые модули после
   модификации логики обработки "безымянных" и "активных" строк
 - udfCsvHash2Raw:
   * выполняет удаление пустых и служебных полей "_bashlyk_csv_record=",
     скорректированы описания и тесты
 - udfIni2Csv:
   * скорректирован тестовый модуль
 ini2csv.awk:
 - добавлена метапоследовательность _bashlyk_&#61 (=)
 - замена символов метапоследовательностями будет производится только для
   "активных" секций
 debian/postinst:
 - при установке автоматически выполняются тесты (bashlyk --bashlyk-test)

Tue, 06 May 2014 15:30:35 +0400
	Fix bugs
	Version 1.77
 ini2csv.awk:
 - при разборе ini-файлов символы '(', ')' преобразуются во внутреннее
   представление '_bashlyk_&#40_' и '_bashlyk_&#41_'. Обратное преобразование
   выполняется функцией libstd.sh::udfPrepare2Exec
 - применяется более строгий критерий выделения имени ini-секции: если в строке
   после ']' есть символы (кроме ":" - признака активной секции), то строка
   обрабатывается не как заголовок секции, а как строка текста без ключа.
 - если имя секции содержит пробелы, то они заменяются на символ подчеркивания
 - исправлен фильтр для '#' строк-комментариев, ';' комментарии не
   поддерживаются!
 testunit.awk:
 - исправлена ошибка перенаправления по умолчанию при обработке тестовых блоков

Wed, 16 Apr 2014 13:03:58 +0400
	Fix bugs
	Version 1.76
 Исправлена обработка ini конфигурационного файла по короткому имени
 bashlyk:
 - инициализация глобальной переменной _bashlyk_pathIni
 libini.sh:
 - исправлена ошибка инициализации локальной переменной pathIni в функциях
   udfGetIniSection, udfIniGroupSection2Csv, udfIniGroup2Csv
 - функция udfIni - первый аргумент не должен проверяться как имя файлового
   объекта, исправлена robodoc-документация
 debian/control:
 - добавлена зависимость от пакета docbook-xsl в секции build-depends

Tue, 11 Mar 2014 23:31:14 +0400
	Fix bugs
	Version 1.75
 - libstd.sh: исправлена ошибка трансляции аргументов udfPrepare2Exec в поток
   строк (команд), скорректирован тестовый блок функции,
   исправлено robodoc-описание функции udfXML
 - libini.sh: исправлена ошибка - создание временного файла в текущем каталоге в
   тестовых блоках функций udfIni, udfIni2Csv

Fri, 07 Mar 2014 12:54:54 +0400
	Fix bugs
	Version 1.74
 - libini.sh: явное указание вызова mawk для обработки файлов сценариев
   ini2csv.awk и inisection2csv.awk

Thu, 11 Feb 2014 15:46:22 +0400
	Fix bugs
	Version 1.73
 - testunit.sh: явное указание вызова mawk для обработки сценария testunit.awk
 - убрана жесткая зависимость от почтовых пакетов (bsd-mailx,
   mail-transport-agent), предполагается в будущих релизах применять более
   гибкий механизм уведомлений о выполнении рабочих сценариев. В данной версии
   при отсутствии почтовых пакетов используется утилита "write".
 - исправлены ошибки структуры формируемой robodoc-документации, она стала более
   наглядной
 - упрощены тестовые блоки (секции EXAMPLE robodoc) за счет применения нового
   макроса ">|"
 - исправлены ошибки вывода в документацию (секция EXAMPLE) управляющих строк
   встраивания документа в примерах
 - исправлены неправильные robodoc-заголовки функций
 testunit.sh:
 - вызов сценария testunit.awk выполняется по полному пути ($_bashlyk_pathLib)
 testunit.awk:
 - добавлен "макрос" ">|", который при компиляции тестового сценария
   преобразуется в " | tee -a $_bashlyk_TestUnit_fnLog | ", позволяя сравнивать
   ввод и вывод контрольного фильтра при просмотре тестового журнала, что
   упрощает написание тестовых блоков и делает анализ работы тестов более
   наглядным. В тестовые блоки библиотек внесены соответствующие изменения.
 libstd.sh:
 - при подключении библиотеки инициализируется глобальная переменная
   $_bashlyk_cmdMessage значением в виде командной строки с "mail" или, при
   отсутствии соответствующей команды - "write", тем самым, реализуя отсутствие
   зависимости пакета bashlyk от почтовых пакетов, в том числе и MTA.
 - udfMail дублирует вывод сообщения на stdout, на случай чрезмерного потока
   строк установлена защита до 8 строк на один вызов функции
 debian/control:
 - учитывая проблемы совместимости с gawk, указана жесткая зависимость от mawk
 - добавлена зависимость от пакета robodoc в секции Build-Depends
 - убрана зависимость от bsd-mailx, пакет переведен в секцию Suggests
 liblog.sh:
 - исправлена ошибка в тестовом модуле udfLogger - сохранение и восстановление
   управляющих режимом вывода переменных
 - более точный тест для udfLog

Mon, 13 Jan 2014 23:23:23 +0400
	New upstream release
	Version 1.72
 Для формирования тестов используется более гибкий способ за счёт обработки awk
 кодом robodoc-описания функций библиотек, что позволило упростить написание
 тестовых блоков. Повышена надежность тестовых блоков за счет изоляции тестов
 отдельных функций. К новому формату тестирования приведены все библиотеки,
 проведена ревизия, исправлены ошибки в тестовых блоках
 testunit.sh:
 - тестирование теперь формируется при помощи вызова специального awk-сценария
   testunit.awk, который компилирует тело тестового сценария на основе привязки
   к блоку robodoc-описания функции вместо последовательной grep-фильтрации
   принудительно размеченных именем функции строк EXAMPLE секций. Это позволило
   убрать избыточные метки-привязки к тестируемым функциям и, тем самым,
   существенно упростить написание тестовых блоков. Применяются метки:
    #? - перенаправление вывода строки теста в лог-файл с анализом статуса
    #= - без перенаправление вывода, но с анализом статуса
    #- - без перенаправление вывода и без анализа статуса
    Без меток (по умолчанию) к строке теста применяется только перенаправление
    вывода в лог-файл
 - для каждой функции библиотеки формируется специальная тестовая функция с
   локальными переменными <функция>_test
 - исправлено поведение testunit.sh - теперь состояние ошибки c сохранением
   cкомпилированного cценария для анализа устанавливается и в случае ошибок в
   самом коде тестирования, а не только при непрохождении отдельных тестов.
 libcnf.sh:
 - исправлена ошибка тестового блока udfGetConfig - создание конфигурационного
   файла в случайном текущем каталоге
 libstd.sh:
 - улучшен тест udfCheckCsv вводом "неименованных" строк в конфигурационный файл
 - написаны тестовые блоки для udfMakeTempV, udfAddPid2Clean, udfAddJob2Clean
 - устаревшая функция udfMakeTempV реализована через вызов udfMakeTemp
 libini.sh:
 - в тестовых блоках для формирования ini-файлов применяется встраивание данных
 - улучшено тестирование в udfIni (проверка активной секции), исправлен тест
   функций udfIni2Csv(Var)
 ini2csv.awk:
 - счетчик "неименованных" значений теперь инициализируется для каждой секции

Sat, 14 Dec 2013 23:09:21 +0400
	New upstream release
	Version 1.71
 libini.sh:
 - появилась возможность задавать "активные" секции или подсекции
   ini-конфигурационных файлов, содержащие исполнимый шелл-код (в том числе и из
   библиотек bashlyk). Признаком таких секций является указание стартующего
   и завершающего заголовка со специальной меткой:

    [имя_секции]:
     ...
    :[имя_секции]

   Если завершающий заголовок отсутствует, то "активной" будет являться
   содержимое до конца ini-файла, не смотря на наличие других заголовков секций!
   Если между завершающей меткой и заголовком следующей секции есть данные, то
   они будут интерпретироваться как обычный ассоциативный массив "ключ=значение"
   В CSV-представлении активной секции первое поле после заголовка представляет
   символ ':'
 libstd.sh:
 - добавлена функция udfPrepare2Exec для подготовки потока команд из входной CSV
   строки, возможно, содержащей метапоследовательности _bashlyk_&#XX_
 - udfShellExec использует вызов udfPrepare2Exec, что позволяет исполнять код
   активных ini-секций.
 ini2csv.awk:
 - при разборе ini-файлов символы ';[\]' преобразуются во внутреннее
   представление '_bashlyk_&#XX_', где XX - коды 59, 91, 92, 93. Обратное
   преобразование выполняется функцией libstd::udfPrepare2Exec
 - Произошли изменения в именах функций:
   udfPrepare2Exec -> udfCsvHash2Raw - получить поток команд - смесь без
   автоматических ключей для неименованных значений
   udfGetEnum2Csv -> udfSelectEnumFromCsvHash - получить только неименованные
   значения

Mon, 18 Nov 2013 14:30:56 +0400
	New upstream release
	Version 1.70
 libini.sh:
 - Добавлена функция udfGetEnum2Csv для получения значений (неименованных) с
   автоматическими ключами вида «_bashlyk_ini_<section>_autoKey_<increment>»
   CSV-строки
 - udfGetSectionCsv - сменился порядок аргументов - такой как и в udfGetEnum2Csv
 - Для улучшения скорости разбора ini-конфигураций начато применение
   awk-сценариев вместо циклов чтения read с применением конвейера команд.
   Добавлены функции:
    udfIniSection2Csv - аналог udfReadIniSection, использует inisection2csv.awk
    udfIniGroupSection2Csv  - аналог udfGetIniSection использует
    udfIniSection2Csv
    udfIni2Csv - получить данные всех секций ini-файла, использует ini2csv.awk
    udfiniGroup2Csv - получить данные всех секций родственных ini-файлов,
    использует udfIni2Csv
    udfIni — получить в переменные данные родственных ini-конфигураций, в том
    числе списки неименованных значений
 - Принято решение вынести код инициализации переменных-аргументов в отдельные
   функции обертки для улучшения читаемости кода за счёт уменьшения количества
   длинных  уникальных идентификаторов локальных переменных ряда функций:
    udfGetIniSection2Var
    udfReadIniSection2Var
    udfCsvOrder2Var
    udfCsvKeys2Var
    udfGetIni2Var
    udfGetCsvSection2Var
    udfIniGroupSection2CsvVar
    udfIni2CsvVar
    udfIniGroup2CsvVar
 libpid.sh:
 - Исправлена ошибка в udfCheckStarted - слишком жесткий фильтр при проверке
   командной строки. Дополнена документация (код возврата 2)

Fri, 07 Jun 2013 12:27:16 +0400
	New upstream release
	Version 1.69
 - ввод новых функций в libini.sh:
   udfGetIni - сериализация в csv-строку конфигурации указанных секций в формате
   [секция1];данные секции;[секция2];данные секции ; ...
   udfGetCsvSection - выделение csv-строки из сериализированных данных udfGetIni
 - исправлена внесённая ошибка в версии 1.66 формирования пути к файлу настроек
   в функциях udfGetConfig (libcnf.sh) и udfReadIniSection (libini.sh) из-за
   изменения инициализации $_bashlyk_pathPrefix
 - в udfGetIniSection введена защита от подстановки шаблонов (* ?) при разборе
   ini-конфигураций
 - в udfReadIniSection игнорируются сообщения об одиночных кавычках и т.п.
   ("xargs -0") при разборе строк ini-конфигураций
 - исправление ошибок документации и тестирования
 - изменение вывода журнала тестирования - логи создаются в домашних каталогах
   пользователей или /var/log/ для root

Mon, 06 May 2013 16:07:21 +0400
	New upstream release
	Version 1.68
 - переписан код тестирования - тестовые блоки в секциях EXAMPLE созданы
   практически для всех функций библиотек
 - непосредственное тестирование производится при помощи новой утилиты
   testunit.sh, которая разбирает разметку и компилирует тестовый сценарий для
   указанной библиотеки. Поддерживается вывод строки тестового сценария в
   журнал, на которой тест не проходит
 - исправлены ошибки и оптимизирован код в функциях:
   udfEcho - потеря аргумента, лишние кавычки
   udfIsValidVariable - не учитывался случай, когда переменная состоит из одного
   символа,
   udfMakeTemp - восстановлено использование суффиксов (mktemp), при этом
   наблюдалось формирование короткого имени временного объекта, исправлено
   udfGetPathMd5 - нелокальная внутренняя переменная
   udfCheckStarted - устранена плавающая ошибка, упрощен код
 - в функциях udfSetConfig, udfGetConfig - локальные переменные рандомизированы,
   для udfSetConfig входные данные (CSV-строка) нормализуются при помощи
   функции udfCheckCsv, которая перенесена из libini в libstd
 - глобальная переменная $_bashlyk_sUnnamed_Keyword содержит фрагмент для
   формирования безымянных ключей для строк данных без ключей
 - библиотеки libxml и libmd5 ликвидированы, их функции перенесены в libstd

Thu, 11 Apr 2013 22:41:58 +0400
	New upstream release
	Version 1.67
 - восстановлена поддержка суффиксов при создании временных объектов в функции
   udfMakeTemp
 - тестовые блоки формируются в секциях EXAMPLE встроенной Robodoc документации

Wed, 03 Apr 2013 11:34:32 +0400
	New upstream release
	Version 1.66
 - объекты файловой системы рабочего сценария, помимо стандарта FHS, создаются
   также с учётом стандарта "XDG Base Directory Specification"
 - формирование man страниц пакета

Mon, 28 Jan 2013 23:32:22 +0400
	Fix bugs
	Version 1.65
 - обновлены константы $_bashlyk_Required_cmd_* библиотек для правильного
   указания используемых утилит командной строки
 - добавлены библиотечные константы $_bashlyk_aExport_* для указания функций,
   экспортируемых модулем
 - исправление ошибок согласно рекомендаций lintian
 - установлена жесткая зависимость от интерпретатора BASH (>=2.0)
 - использование конструкций $(wildcard ..) в Automake.am
 - исправление ошибки в функциях, выдающих результат в аргумент, возникает при
   совпадении аргументов с именами локальных переменных
 - проверка аргументов для результата на валидность (udfIsValidVariable)
 - опция "--bashlyk-test" без уточнения запускает тестирование всех
   зарегистрированных библиотек, рабочий сценарий при этом не выполняется
 - от утилиты grep теперь не требуется поддержка perl регулярных выражений (-P)

Mon, 21 Jan 2013 16:26:12 +0400
	Fix bugs
	Version 1.64
 - перенос процедур тестирования в отдельные файлы
 - функции udfEcho udfMail udfWarn udfThrow и зависимые глобальные переменные
   перенесены в из модуля liblog в libstd
 - libstd: новая функция udfIsValidVariable для проверки идентификаторов
   переменных
 - libini: новая функция udfCheckCsv для приведения строки CSV к
   сериализированному ассоциативному массиву. Ключи с пробелами теперь не
   отбрасываются, а поля (строки) их содержащие, обрабатываются как "безымянный"
   элемент массива (со служебным автоматически инкрементируемым ключом)

Mon, 14 Jan 2013 23:55:48 +0400
	New upstream release
	Version 1.63
 - в функции модуля libini включена возможность чтения/записи данных ini-файлов
   в виде обычных строк, ранее обрабатывались только строки "ключ = значение"

Thu, 26 Jul 2012 16:06:01 +0400
	Fix bugs
	Version 1.62
 - старые версии mktemp (например, 1.5) не поддерживают суффиксы, поэтому они
   временно создаются после префиксов при использовании mktemp (udfMakeTemp)
 - исправлены ошибки udfMakeTemp

Wed, 25 Jul 2012 14:26:36 +0400
	Fix bugs
	Version 1.61
 - использование рандомизированных имен переменных, участвующих в возврате
   значений в аргумент функции

Fri, 20 Jul 2012 11:38:43 +0400
	Fix bugs
	Version 1.60
 - включено формирование документации модуля libini
 - исправлены ошибки в документации модуля liblog
 - liblog.sh: get/set функция _fnLog позволяет не только задать новое имя
   журнала, но и создать его (вызов udfSetLog)

Wed, 18 Jul 2012 19:13:25 +0400
	Fix bugs
	Version 1.59
 - debian/control: скорректирована зависимость от версии grep (>=2.5.4) -
   необходима поддержка perl регулярных выражений (опция -P) для корректной
   работы функций libini

Fri, 13 Jul 2012 10:38:33 +0400
	New upstream release
	Version 1.58
 - функции и глобальные переменные, носящие универсальный характер, перенесены в
   в libstd.sh
 - libstd.sh: переписана функция udfMakeTemp - теперь имеет двойное поведение,
   которое зависит от способа вызова. Аргументы функции преимущественно
   именные, позволяют произвести всевозможные настройки создаваемого объекта.
   Функция udfMakeTempV устарела, остается для совместимости
 - исправлены ошибки предыдущих версий, скорректированы зависимости

Thu, 05 Jul 2012 11:58:55 +0400
	Fix bugs
	Version 1.57
 - bashlyk: установлена защита от рекурсивного вызова (/usr/bin/bashlyk)
 - libopt.sh: функции udfAlias2WSpace udfWSpace2Alias udfQuoteIfNeeded
   перенесены в libstd.sh
 - более компактный вывод диагностики тестовых модулей
 - убраны лишние библиотечные зависимости

Wed, 04 Jul 2012 18:19:07 +0400
	New upstream release
	Version 1.56
 - разработан новый модуль - libini - для предоставления более безопасного
   способа хранения настроек в пассивных конфигурационных ini-файлах, чем модуль
   libcnf, который позволяет манипулировать с активными конфигурациями.
   Поддерживаются секции (возможно их отсутствие), написан тестовый модуль

Sat, 17 Mar 2012 22:54:00 +0400
	Fix bugs
	Version 1.55
 - libstd.sh: в тестовый модуль добавлена проверка функций udfOnEmptyVariable..
 - liblog.sh: в функции udfMail заменен вызов udfMakeTemp на udfMakeTempV

Mon, 05 Mar 2012 17:40:00 +0400
	Fix bugs
	Version 1.54
 - libstd.sh: дополнительный класс функций udfOnEmptyVariable... c возможностью
   выбора действия: предупреждение или останов сценария

Sun, 26 Feb 2012 23:07:10 +0400
	Fix bugs
	Version 1.53
 - в целях планируемой поддержки dash исправлены некоторые базовые проблемы
   совместимости с данным интерпретатором
 - libcnf.sh: Операция по реверсу порядка слов в строке выполняется при помощи
   awk вместо массива bash

Fri, 24 Jun 2011 14:26:55 +0400
	Fix bugs
	Version 1.52
 - liblog.sh: Название тестируемой функций по созданию временных объектов
   изменено на udfMakeTempV. Имя временного объекта принимает идентификатор,
   указанный функции как первый аргумент. Ранее функция возвращала имя как
   вывод на стандартное устройство, порождая новый процесс, поэтому в теле
   функции нельзя было установить флаг удаления временного файла после
   завершения процесса

Thu, 23 Jun 2011 14:41:42 +0400
	New upstream release
	Version 1.51
 - liblog.sh: добавлена тестируемая функция - замена udfMakeTemp. Рабочее
   название udfMakeTempO, по умолчанию включает временный файл на удаление, а
   также позволяет создавать временный каталог.
 - libopt.sh: расширена функциональность функций udfWSpace2Alias и
   udfAlias2WSpace - теперь возможно их использование в конвейере

Wed, 15 Jun 2011 13:49:56 +0400
	New upstream release
	Version 1.50
 - для утилитарных функций (без глобальных переменных) сформирована отдельная
   библиотека libstd.sh
 - libstd.sh: функция udfIsNumber теперь может считать набор цифр с символом на
   конце (13k 234M 1G) натуральным числом (см. документацию)
 - liblog.sh: исправлена ошибка udfWarn в режиме конвейера

Tue, 03 May 2011 13:51:16 +0400
	New upstream release
	Version 1.49
 - liblog.sh: добавлена функция udfIsNumber - проверка аргумента на то, что он
   является натуральным числом, функция также добавлена в блок теста библиотеки

Mon, 18 Apr 2011 11:41:13 +0400
	Fix bugs
	Version 1.48.3
 - control: установлена зависимость от пакета bsd-mailx вместо mailx
 - liblog.sh: исправлена ошибка с инициализацией глобальных переменных в теле
   функции тестирования модуля udfLibLog
 - Код возврата -1 заменён на 255

Tue, 09 Nov 2010 16:30:43 +0300
	Fix bugs
	Version 1.48.2
 - udfShellExec (liblog.sh): временный файл будет уничтожаться сразу после
   выполнения скрипта.

Tue, 02 Nov 2010 16:13:26 +0300
	Fix bugs
	Version 1.48.1
 - до подключения внешних библиотек происходит инициализация только глобальной
   переменной $_bashlyk_pathLib - остальные после подключения.

Mon, 01 Nov 2010 16:33:06 +0300
	New upstream release
	Version 1.48
 - блок тестирования функций модулей (liblog.sh - частично) приведён к виду,
   когда результат проверки функций отмечается только метками "ok" или "fail"
 - инициализация глобальных переменных в модуле происходит до подключения
   внешних библиотек
 - udfUptime (liblog.sh) теперь возвращает 0 при успешном выполнении, а не
   прошедшие секунды.

Wed, 27 Oct 2010 14:01:09 +0400
	Fix bugs
	Version 1.47.3
 - udfLogger (liblog.sh) - проверяется наличие пути для файла журнала

Wed, 27 Oct 2010 13:15:17 +0400
	Fix bugs
	Version 1.47.2
 - Исправлены ошибки в модулях тестирования библиотек
 - udfMail (liblog.sh) - дублирование вывода сообщения в журнал или stdout

Wed, 27 Oct 2010 11:30:36 +0400
	Fix bugs
	Version 1.47.1
 - udfLibCnf (libcnf.sh) исправлены ошибки в модуле тестирования

Wed, 27 Oct 2010 01:17:17 +0400
	New upstream release
	Version 1.47
 - Для тестирования библиотек теперь используется аргумент вида
   "--bashlyk-test=<libname1[,libname2[,...]]>"
 - udfLibCnf (libcnf.sh) - блок тестирования функций модуля приведён к виду,
   когда результат проверки функций отмечается только метками "ok" или "fail"

Tue, 26 Oct 2010 16:40:32 +0400
	New upstream release
	Version 1.46
 - udfGetConfig (libcnf.sh) теперь для версий BASH 3.x и 4.x выполняется
   одинаково
 - udfLibCnf (libcnf.sh) - улучшена проверка работы функции за счет
   использования инициализации переменных данными из файла конфигурации

Thu, 20 May 2010 14:43:21 +0400
	Fix bugs
	Version 1.45.1
 - Имена локальных переменных функций udfThrowOnEmptyVariable и udfShowVariable
   не должны случайно совпасть с их аргументами, поэтому теперь используются
   рандомизированные имена.

Thu, 20 May 2010 13:56:44 +0400
	New upstream release
	Version 1.45
 - Добавлена переменная $_bashlyk_sGroup - инициализируется значением GID
   процесса
 - функции udfThrowOnEmptyVariable и udfShowVariable теперь используют ссылки на
   переменные типа ${!<variable>} вместо создания временных файлов.
 - PID процессов в ${_bashlyk_apidClean} в функции udfOnTrap проверяется
   на то, что родителем их является текущий процесс ($$)

Fri, 16 Apr 2010 09:52:00 +0400
	Fix bugs
	Version 1.44.4
 - liblog.sh: помимо очистки по завершению, добавлено удаление временных файлов
   в теле функций udfThrowOnEmptyVariable и udfShowVariable, потому как сценарии
   могут работать продолжительное время и многократно вызывать эти функции

Fri, 12 Mar 2010 10:19:01 +0400
	Fix bugs
	Version 1.44.3
 - Добавлена переменная $_bashlyk_sUser и скорректирована $_bashlyk_emailSubj

Fri, 26 Feb 2010 10:03:00 +0400
	Fix bugs
	Version 1.44.2
 - Правильная обработка umask по умолчанию для udfMakeTemp

Wed, 10 Feb 2010 10:51:47 +0400
	Fix bugs
	Version 1.44.1
 - Установка правильных значений umask для udfMakeTemp

Tue, 09 Feb 2010 16:53:28 +0400
	New upstream release
	Version 1.44
 - udfMakeTemp теперь использует umask вместо chmod
 - Функции "_<Переменная>" теперь позволяют не только получать, но и
   устанавливать соответствующие переменные (механизм put/get)
 - Ошибки в разборе командной строки теперь вызывают отдельный код возврата, что
   дает возможность их обрабатывать.
 - Для создания временных файлов используется udfMakeTemp (libopt.sh)

Fri, 05 Feb 2010 14:48:02 +0400
	New upstream release
	Version 1.43
 - Введен выбор условия автоматического использования лог-файла по редиректу или
   потери основного терминала
 - Введены новые функции в библиотеку liblog.sh: udfMakeTemp,
   udfThrowOnEmptyVariable, udfShowVariable

Thu, 16 Iul 2009 12:59:57 +0500
	New upstream release
	Version 1.42
 - Добавлена генерация документации на движке robodoc
 - Вместо udfIsTerm добавлены функции udfInteractive (проверка редиректа)
   udfIsTerminal (проверка терминала)

Mon, 27 Apr 2009 14:31:57 +0500
	New upstream release
	Version 1.41
 - Добавлена переменная $_bashlyk_pidLogSock для завершения дочернего
   лог-процесса через команду wait <pid>

Thu, 15 Jan 2009 10:36:31 +0400
	New upstream release
	Version 1.40
 - Добавлена переменная $_bashlyk_pathPrefix для логики поиска файла
   конфигурации

Sun, 11 Jan 2009 16:52:34 +0400
	New upstream release
	Version 1.39
 - Введена функция формирования xml контента ('udfXml' или '_' ) в libxml.sh.
 - Добавлены новые функции для очистки временных ресурсов в библиотеку
   liblog.sh: udfOnTrap, udfAdd{Job,File,Path,Pid}2Clean
 - Изменена логика поиска файла конфигурации - при отсутствии по пути
   $_bashlyk_pathCnf, выполняется поиск в каталоге /etc

Wed, 10 Dec 2008 11:59:04 +0400

	New upstream release
	Version 1.38
 - Изменен механизм журналирования. Теперь используется вызов exec c
   перенаправлением в именованный канал.
 - Изменен начальный каталог для обычного пользователя. Теперь он всегда
   ~/.bashlyk
 - Подкаталог для служебных файлов (pid, socket) в /var/run создается если у
   скрипта есть аргументы командной строки.
 - Оптимизирован код

Mon, 22 Sep 2008 16:44:02 +0500

	New upstream release
	Version 1.35

